swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /accounts:
    get:
      tags:
        - Accounts
      summary: Get all bank accounts
      description: Retrieve all accounts for the authenticated user
      security:
        - Bearer: []
      responses:
        "200":
          description: List of accounts retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Account'
        "500":
          description: Internal Server Error
  /accounts/{accountId}:
    get:
      tags:
        - Accounts
      summary: Get account details
      description: Retrieve details of a specific account by ID
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      security:
        - Bearer: []
      responses:
        "200":
          description: Account details retrieved successfully
          schema:
            $ref: '#/definitions/Account'
        "404":
          description: Account not found
        "500":
          description: Internal Server Error
  /accounts/{accountId}/transactions:
    get:
      tags:
        - Transactions
      summary: Get transactions for an account
      description: Retrieve all transactions for a specific account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      security:
        - Bearer: []
      responses:
        "200":
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        "404":
          description: Account not found
        "500":
          description: Internal Server Error
  /transactions/{transactionId}:
    put:
      tags:
        - Transactions
      summary: Update transaction
      description: Update the category and comment of a specific transaction
      security:
        - Bearer: []
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
        - in: body
          name: body
          description: Update transaction payload
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      responses:
        "200":
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/Transaction'
        "404":
          description: Transaction not found
        "400":
          description: Invalid data
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Account:
    type: object
    properties:
      id:
        type: string
      accountName:
        type: string
      accountType:
        type: string
        enum:
          - Checking
          - Saving
          - CreditCard
      balance:
        type: number
  Transaction:
    type: object
    properties:
      transactionId:
        type: string
      accountId:
        type: string 
      date:
        type: string
        format: date
      description:
        type: string
      amount:
        type: number
      balanceAfter:
        type: number
      type:
        type: string
      category:
        type: string
        enum:
          - Food
          - Entertainment
          - Travel
          - Health
          - Shopping
          - Other
      comment:
        type: string
  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
        enum:
          - Food
          - Entertainment
          - Travel
          - Health
          - Shopping
          - Other
      comment:
        type: string
